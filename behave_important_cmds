--------------------------------------------------------------------Cucumber/Behave--------------------------------------------------------------------------------------------------------
features - dir
features/steps - dir
 assert context.failed is False

Tutorials :-
first run : https://behave.readthedocs.io/en/stable/tutorial.html
environmental-controls : https://behave.readthedocs.io/en/stable/tutorial.html#environmental-controls
python-step-implementation : https://behave.readthedocs.io/en/stable/tutorial.html#python-step-implementations
-------------------------------------------------------------------------------------------------------------------
Scenario :
Scenario Outline :
Scenario Template :
Scenarios :
----------------------------------------------------------------------------
Scenario : Basic implementation
  Scenario: validating the search feature
    Given I navigate to google.com
    When I Validate the Page title
    Then I enter the text as Hello Selenium
    And I click the search button
----------------------------------------------------------------------------
Scenario Outline : Implementation with multiple data listed in examples with example data tables.
    Scenario Outline: Blenders
    Given I put <thing> in a blender,
    when I switch the blender on
    then it should transform into <other thing>

    Examples: Amphibians
    | thing         | other thing |
    | Red Tree Frog | mush        |

    Examples: Consumer Electronics
    | thing         | other thing |
    | iPhone        | toxic waste |
    | Galaxy Nexus  | toxic waste |
----------------------------------------------------------------------------
if text included in between steps :
  Given a sample text loaded into the frobulator
     """
     Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do
     eiusmod tempor incididunt ut labore et dolore magna aliqua.
     """
  When we activate the frobulator
--------------------------------------------------------------------------------
Scenario: some scenario
  Given a set of specific users
     | name      | department  |
     | Barry     | Beer Cans   |
     | Pudey     | Silly Walks |
     | Two-Lumps | Silly Walks |
 When we count the number of people in each department
 Then we will find two people in "Silly Walks"
 But we will find one person in "Beer Cans"

@given('a set of specific users')
def step_impl(context):
    for row in context.table:
        model.add_user(name=row['name'], department=row['department'])
---------------------------------------------------------------------------------

python behave documentation : [https://behave.readthedocs.io/en/stable/]
eg:
Feature: Search Feature
  Scenario: validating the search feature
    Given I navigate to google.com
    When I Validate the Page title
    Then I enter the text as Hello Selenium
    And I click the search button

These are also called as user stories

To Create step definition files :
  - In terminal navigate to folder containing feature-files folder and run
     [cd path_to_folder_containing_feature_files]
     [cmd command : behave features]
  - Steps:
    - [steps directory] would always come inside [feature directory]
    - create steps.py file for same .feature file
    - run cmd command for feature
    - take missing steps code from console and paste it in the ide
    - from the .feature file hover and create the step definition files for same in feature directory

Hooks :
 - hooks kept in environment.py file
 - before_scenario
 - after_step

 url for behave ::- https://www.tutorialspoint.com/behave/behave_hooks.htm
 - use use_step_matcher('parse') instead of use_step_matcher('re')

 How to run test-cases from cmd in behave
 - behave feature_file_folder
 - behave feature_file_folder\.features_file  [path of feature_file]
 - running feature files with tags :: behave feature_file_folder --tags=smoke/sanity/etc

 installing behave via github repo :
 pip install git+https://github.com/behave/behave

 Intendation :- ctrl + alt + L in .feature file
 ------------------------------------------------------------------------------------------------------------------------------------------
 behave --tags=slow            => will run the scenario with tag slow
 behave --tags=-slow           => will run all scenarios except tag slow
 behave --tags=wip,slow        => will run scenarios with either wip or slow
 behave --tags=wip --tags=slow => will select all test cases with wip and slow
 behave -n 'This is a scenario name'
 behave -i file_name.feature / behave --include file_name
 behave -e file_name => for excluding


-----------------------------------------------------------------behave and allure report together--------------------------------------------------------------------------------
- install allure behave : pip install allure-behave
- cmd command to run allure report with behave results :
       [behave -f allure_behave.formatter:AllureFormatter -o allure_behave_results_folder/ features --tags=-smoke/sanity/etc]
- then allure serve folder_name_with_json_files
